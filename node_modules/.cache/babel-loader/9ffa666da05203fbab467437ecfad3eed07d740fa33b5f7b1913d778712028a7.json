{"ast":null,"code":"var _jsxFileName = \"/Users/lina/Documents/SEI2023/_projects/project2_climb/src/components/ClimbsList.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"./ClimbsList.css\";\nimport { useClimbs } from \"./hooks/useClimbs\";\n// import { useState } from \"react\";\n\n// const [selectedValue, setSelectedValue] = useState();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClimbsList = () => {\n  _s();\n  const {\n    error,\n    loading,\n    data\n  } = useClimbs();\n  if (loading) return \"Loading\";\n  if (error) return `Error ${error.message}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ClimbsList\",\n    children: /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => {\n        var _data$areas;\n        const findValue = (_data$areas = data.areas) === null || _data$areas === void 0 ? void 0 : _data$areas.find(x => x.id === e.target.value);\n        // console.log(findValue);\n        setSelectedValue(findValue);\n      },\n      children: data.areas.map(climbs => {\n        return (\n          /*#__PURE__*/\n          // adding value === id\n          _jsxDEV(\"option\", {\n            value: climbs.id,\n            children: climbs.areaName\n          }, climbs.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this)\n        );\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this)\n  // {selectedValue ? <useClimbs = {selectedValue} /> : null}\n\n  // <div className=\"ClimbsList\">\n  //   {data.areas.map((climbs) => {\n  //     return (\n  //       <div>\n  //         <ul>\n  //           <li>\n  //             Area Name: {climbs.areaName} Tried: {climbs.totalClimbs}\n  //           </li>\n  //           <li>{climbs.content.description}</li>\n  //         </ul>\n  //       </div>\n  //     );\n  //   })}\n  // </div>\n  ;\n};\n_s(ClimbsList, \"x+XCyjn/JdEOmI+nEjy3iUJ1+kI=\", false, function () {\n  return [useClimbs];\n});\n_c = ClimbsList;\nexport default ClimbsList;\nvar _c;\n$RefreshReg$(_c, \"ClimbsList\");","map":{"version":3,"names":["React","useClimbs","jsxDEV","_jsxDEV","ClimbsList","_s","error","loading","data","message","className","children","onChange","e","_data$areas","findValue","areas","find","x","id","target","value","setSelectedValue","map","climbs","areaName","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/lina/Documents/SEI2023/_projects/project2_climb/src/components/ClimbsList.jsx"],"sourcesContent":["import React from \"react\";\nimport \"./ClimbsList.css\";\nimport { useClimbs } from \"./hooks/useClimbs\";\n// import { useState } from \"react\";\n\n// const [selectedValue, setSelectedValue] = useState();\n\nconst ClimbsList = () => {\n  const { error, loading, data } = useClimbs();\n\n  if (loading) return \"Loading\";\n  if (error) return `Error ${error.message}`;\n\n  return (\n    <div className=\"ClimbsList\">\n      <select\n        onChange={(e) => {\n          const findValue = data.areas?.find((x) => x.id === e.target.value);\n          // console.log(findValue);\n          setSelectedValue(findValue);\n        }}\n      >\n        {data.areas.map((climbs) => {\n          return (\n            // adding value === id\n            <option key={climbs.id} value={climbs.id}>\n              {climbs.areaName}\n            </option>\n          );\n        })}\n      </select>\n    </div>\n    // {selectedValue ? <useClimbs = {selectedValue} /> : null}\n\n    // <div className=\"ClimbsList\">\n    //   {data.areas.map((climbs) => {\n    //     return (\n    //       <div>\n    //         <ul>\n    //           <li>\n    //             Area Name: {climbs.areaName} Tried: {climbs.totalClimbs}\n    //           </li>\n    //           <li>{climbs.content.description}</li>\n    //         </ul>\n    //       </div>\n    //     );\n    //   })}\n    // </div>\n  );\n};\n\nexport default ClimbsList;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,kBAAkB;AACzB,SAASC,SAAS,QAAQ,mBAAmB;AAC7C;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM;IAAEC,KAAK;IAAEC,OAAO;IAAEC;EAAK,CAAC,GAAGP,SAAS,CAAC,CAAC;EAE5C,IAAIM,OAAO,EAAE,OAAO,SAAS;EAC7B,IAAID,KAAK,EAAE,OAAQ,SAAQA,KAAK,CAACG,OAAQ,EAAC;EAE1C,oBACEN,OAAA;IAAKO,SAAS,EAAC,YAAY;IAAAC,QAAA,eACzBR,OAAA;MACES,QAAQ,EAAGC,CAAC,IAAK;QAAA,IAAAC,WAAA;QACf,MAAMC,SAAS,IAAAD,WAAA,GAAGN,IAAI,CAACQ,KAAK,cAAAF,WAAA,uBAAVA,WAAA,CAAYG,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKN,CAAC,CAACO,MAAM,CAACC,KAAK,CAAC;QAClE;QACAC,gBAAgB,CAACP,SAAS,CAAC;MAC7B,CAAE;MAAAJ,QAAA,EAEDH,IAAI,CAACQ,KAAK,CAACO,GAAG,CAAEC,MAAM,IAAK;QAC1B;UAAA;UACE;UACArB,OAAA;YAAwBkB,KAAK,EAAEG,MAAM,CAACL,EAAG;YAAAR,QAAA,EACtCa,MAAM,CAACC;UAAQ,GADLD,MAAM,CAACL,EAAE;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEd;QAAC;MAEb,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN;EACL;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;AAEJ,CAAC;AAACxB,EAAA,CA1CID,UAAU;EAAA,QACmBH,SAAS;AAAA;AAAA6B,EAAA,GADtC1B,UAAU;AA4ChB,eAAeA,UAAU;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}